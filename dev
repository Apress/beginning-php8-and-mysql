#!/usr/bin/env bash


export APP_PORT=${APP_PORT:-80}
export MYSQL_PORT=${MYSQL_PORT:-3306}
export LOCAL_IP=`ifconfig -a | grep inet | grep 0xffffff00 | cut -d\  -f2 | head -n 1`
export XDEBUG_HOST=${XDEBUG_HOST:LOCAL_IP}

TTY=""

## CI sends BUILD_NUMBER env variable.
if [ ! -z "$BUILD_NUMBER" ]; then
    DOCKER_HOST="unix://var/run/docker.sock"
    # Disable pseudo TTY for CI
    TTY="-T"
fi

UNAMESTR=`uname`
if [ "$UNAMESTR" == 'Linux' ] || [ "$UNAMESTR" == 'Darwin' ]; then
    COMPOSE="docker-compose"
else
    COMPOSE="winpty docker-compose -f docker-compose.yml"
fi

if [ $# -gt 0 ];then
    if [ "$1" == "up" ]; then
        shift 1
        cat file_id.diz
        $COMPOSE up 
    fi
    if [ "$1" == "ssh" ]; then
        container=$(docker ps -q --filter="NAME=$2")
        docker exec -ti $container bash
    fi
    if [ "$1" == "destroy" ]; then
        shift 1
        # Stop all containers
        docker stop $(docker ps -a -q)
        # Delete all containers
        docker rm $(docker ps -a -q)
        # Delete all images
        # docker rmi $(docker images -q)
        docker system prune -a -f
        docker volume prune -f
    fi
    else
    docker ps
    printf "\n--------------------------------------------------\n"
    printf "\n  -- Usage -- \n\n"
    printf "./dev {option} \n\n"
    echo "up      -- Brings up the dev environment"
    echo "down    -- Brings down the dev environment"
    echo "destroy -- Destorys all docker containers and images"
    printf "\n--------------------------------------------------\n"
fi
